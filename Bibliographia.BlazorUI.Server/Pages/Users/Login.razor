@page "/users/login"
@inject IAuthenticationService _authenticationService
@inject NavigationManager _navManager

<h3>Login</h3>

<div>
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="loginModel.Email" />
            <ValidationMessage For="@(()=>loginModel.Email)" />
        </div>
        <br />
        <div class="form-group">
            <label for="password">Password</label>
            <InputText class="form-control" type="password" @bind-Value="loginModel.Password" />
            <ValidationMessage For="@(()=>loginModel.Password)" />
        </div><br />

        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    UserDto loginModel = new UserDto();

    string message = string.Empty;
    private async Task HandleLogin()
    {
        try
        {
            var response = await _authenticationService.AuthenticateAsync(loginModel);

            if (response)
            {
                _navManager.NavigateTo("/");
            }
            message = $"Invalid credentials - please try again";
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {

            }
            message = ex.Response;
        }    
    }
}
